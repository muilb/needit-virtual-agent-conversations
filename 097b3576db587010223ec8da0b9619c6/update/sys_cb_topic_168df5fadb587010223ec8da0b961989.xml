<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_cb_topic">
    <sys_cb_topic action="INSERT_OR_UPDATE">
        <applicability/>
        <applicability_mode>query</applicability_mode>
        <auto_resolution_enabled>false</auto_resolution_enabled>
        <category>37bb35fadb587010223ec8da0b9619a5</category>
        <channels/>
        <connect_queue/>
        <description>Topic allows user to update their NeedIt records</description>
        <flexible_conversation_switching>false</flexible_conversation_switching>
        <graph>{
  "graph_api_version": "1.0.31",
  "goals": {
    "primary": {
      "id": "primary",
      "trigger": {
        "type": "primary"
      },
      "name": "primary",
      "applicability": "",
      "description": "",
      "nodes": {
        "b59fa204c1464d289c8eb451ab579b0d": {
          "id": "b59fa204c1464d289c8eb451ab579b0d",
          "stepType": "Start",
          "name": "Start",
          "greetingResponse": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": " I can help you find and update NeedIt records for a type of request."
                  }
                ]
              }
            ],
            "mode": "simple"
          }
        },
        "04813aaf95dc49f29993fbb8b80002db": {
          "id": "04813aaf95dc49f29993fbb8b80002db",
          "stepType": "TerminateGoal",
          "name": "End",
          "confirmationMessage": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Ask again when you need to update other NeedIt records."
                  }
                ]
              }
            ],
            "mode": "simple"
          }
        },
        "4be70992490948eb93031b0792af7f28": {
          "stepType": "ChoicePrompt",
          "name": "NeedIt Type",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Which type of NeedIt record would you like to view?"
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "a793eef3c15b4cf5920016921ba8c345",
          "id": "4be70992490948eb93031b0792af7f28",
          "withNluUserInput": false,
          "skipIfFulfilled": false
        },
        "afb85ba3a0524fd090fa828ef6ae601a": {
          "id": "afb85ba3a0524fd090fa828ef6ae601a",
          "stepType": "TextOutput",
          "name": "Confirm NeedIt Type",
          "secure": false,
          "value": {
            "value": "(function execute() {\n    /* Return a quoted string.  For example:\n\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessage('hi there {0}', [vaInputs.first_name]);\n       } else {\n           return gs.getMessage('how are you {0}', [vaInputs.last_name]);\n       }\n    */\n    return 'You selected: ' + vaInputs.needit_type.getDisplayValue();\n})()\n",
            "mode": "script"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          }
        },
        "11dd8833309b4724847f5eb9ece28b24": {
          "stepType": "ReferenceChoicePrompt",
          "name": "NeedIt List",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Select a NeedIt record to view."
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "2e6d5cee6b9e40378cc03ec2ffa4607c",
          "id": "11dd8833309b4724847f5eb9ece28b24",
          "mode": "glide_record",
          "script": "",
          "metadataScript": "",
          "noRecordsResponseMsg": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "You have no open NeedIt records."
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "condition": {
            "mode": "glide_scripted_query",
            "value": "(function execute(table) {\n    /* Code your glide record query logic here. For example:\n\n        var options = [];\n        var gr = new GlideRecordSecure(table);\n        gr.addEncodedQuery('active=true^numberSTARTSWITHINC001001');\n        gr.setLimit(10);\n        gr.query();\n        while(gr.next()) {\n            options.push({ 'value': gr.getUniqueValue(), 'label': gr.getValue('short_description') });\n        }\n        return options;\n    */\n\n\t// Initialize an array for the list of NeedIt records to show\n\tvar options = [];\n\t\n\t// Query the table selected in the Table field for active records with the \n\t// u_request_type selected in the NeedIt Type node where the user is the \n\t// u_requested_for. Order the results by the When needed value.\n\tvar grNI = new GlideRecord(table);\n\tgrNI.addQuery('u_request_type',vaInputs.needit_type.getValue());\n\tgrNI.addQuery('active','true');\n\tgrNI.addQuery('u_requested_for',vaInputs.user);\n\tgrNI.orderBy('u_when_needed');\n\tgrNI.query();\n\t\n\t// Push a value and label pair to the array for each record the query returns.\n\t// The value is the unique value. The label is the number, u_when_needed, and \t\t    \n    // short_description values for the NeedIt record.\n\twhile(grNI.next()) {\n\t    options.push({ 'value': grNI.getUniqueValue(), 'label': grNI.getValue('number') + \" (\" + grNI.getDisplayValue('u_when_needed') + \"): \" + grNI.getValue('short_description') });\n\t}\n\t\n\t// Return the array\n\treturn options;\n})(table)\n"
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false
        },
        "8f28d10169b042aeb3fc111f68227f43": {
          "id": "8f28d10169b042aeb3fc111f68227f43",
          "stepType": "RecordOutput",
          "name": "NeedIt Card",
          "variableId": "2e6d5cee6b9e40378cc03ec2ffa4607c",
          "cardTemplate": "General",
          "cardFields": {},
          "mode": "variable",
          "tableName": "x_58872_needit_needit",
          "fields": [
            "priority",
            "short_description",
            "u_when_needed"
          ],
          "cardDefinition": {
            "name": "Record",
            "value": "General"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "condition": {
            "mode": "glide_query",
            "value": ""
          }
        },
        "b6350fedfd6c4752954ad3c2eda1d665": {
          "id": "b6350fedfd6c4752954ad3c2eda1d665",
          "stepType": "Prompt",
          "name": "Search Again",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Would you like to view another NeedIt Record?"
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false,
          "variableId": "c3b2a9b0591d40bd863bf13e03ab0574"
        },
        "e6b8f5474e224e8b87c92c7c06ee457b": {
          "id": "e6b8f5474e224e8b87c92c7c06ee457b",
          "stepType": "Decision",
          "name": "Find more NeedIt records?"
        },
        "6063d490a37745cc865bed11af09d379": {
          "id": "6063d490a37745cc865bed11af09d379",
          "stepType": "Prompt",
          "name": "New When Needed Date",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "When do you need the NeedIt completed?"
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false,
          "variableId": "eb252eae8d194d9eaad73cb65419c43a"
        },
        "6af39a05a94a435fbb313bf8ec6f619a": {
          "id": "6af39a05a94a435fbb313bf8ec6f619a",
          "stepType": "CrudAction",
          "name": "Change When Needed Date",
          "template": "u_when_needed={{vaInputs.new_when_needed_date}}",
          "mode": "update",
          "record": "2e6d5cee6b9e40378cc03ec2ffa4607c",
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "variableId": "8d9be18359ae49d1a886c1be2fcdf26a"
        },
        "02ca13429f7f48f9af956e421e6a6139": {
          "id": "02ca13429f7f48f9af956e421e6a6139",
          "stepType": "RecordOutput",
          "name": "Updated NeedIt",
          "variableId": "2e6d5cee6b9e40378cc03ec2ffa4607c",
          "cardTemplate": "General",
          "cardFields": {},
          "mode": "variable",
          "tableName": "x_58872_needit_needit",
          "fields": [
            "u_when_needed"
          ],
          "cardDefinition": {
            "name": "Record",
            "value": "General"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "condition": {
            "mode": "glide_query",
            "value": ""
          }
        },
        "86e177e7f8f34da1a0cd2cf727dc9163": {
          "id": "86e177e7f8f34da1a0cd2cf727dc9163",
          "name": "Update search_count",
          "script": "(function execute() {\n    /* Code your scripted action here. For example, you might update a\n       record based on conditional logic:\n\n        if (vaVars.my_flag == 'say hello') {\n            gs.info('hi there');\n        } else {\n            gs.info('bye now');\n        }\n    */\n    //vaVars.search_count = vaVars.search_count + 1;\n    vaVars.search_count++;\n})()\n",
          "stepType": "ScriptAction",
          "applicability": {
            "value": "",
            "mode": "query"
          }
        },
        "49bd7025f7234edc984d5536e65aed8a": {
          "id": "49bd7025f7234edc984d5536e65aed8a",
          "stepType": "Decision",
          "name": "Decision"
        },
        "ec808233c73d495db95fe9f5303c9058": {
          "id": "ec808233c73d495db95fe9f5303c9058",
          "stepType": "TextOutput",
          "name": "Limit Reached",
          "secure": false,
          "value": {
            "value": "(function execute() {\n    /* Return a quoted string.  For example:\n\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessage('hi there {0}', [vaInputs.first_name]);\n       } else {\n           return gs.getMessage('how are you {0}', [vaInputs.last_name]);\n       }\n    */\n    if (vaSystem != undefined) {\n        vaVars.test_value = 'bien ton tai vaSystem' + vaSystem.toString();\n\n    }\n    if (vaSystem.isLiveAgentAvailable()){\n\t    return 'You have reached your NeedIt search limit. I will transfer you to a live agent for assistance.'\n\t} else {\n\t    return 'You have reached your NeedIt search limit. If you need to work with multiple NeedIt records, open NeedIt &gt; My NeedIt Requests.'\n\t}\n})()\n",
            "mode": "script"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          }
        },
        "3080f16ee0db4a7f8be0bb005b169972": {
          "id": "3080f16ee0db4a7f8be0bb005b169972",
          "name": "Transfer to Agent",
          "script": "(function execute() {\n    /* Code your scripted action here. For example, you might update a\n       record based on conditional logic:\n\n        if (vaVars.my_flag == 'say hello') {\n            gs.info('hi there');\n        } else {\n            gs.info('bye now');\n        }\n    */\n    // Transfer to a live agent\n    vaSystem.connectToAgent();\n})()\n",
          "stepType": "ScriptAction",
          "applicability": {
            "mode": "script",
            "value": "(function execute() {\n    /* Return true or false to indicate if the topic or topic node can run\n       and be discoverable (or not).  For example:\n\n       var applicability = vaInputs.first_name == 'Bill' ? true : false;\n       return applicability;\n    */\n    // If Live Chat is available, return true\n\t// otherwise, return false\n\tif (vaSystem.isLiveAgentAvailable()){\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n})()\n"
          }
        }
      },
      "edges": [
        {
          "id": "dbd88966365e42088c431f5319093fa4",
          "edgeType": "Edge",
          "source": "b59fa204c1464d289c8eb451ab579b0d",
          "target": "4be70992490948eb93031b0792af7f28",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "5fad5bd0a3144eeba6e0ada52e03ce32",
          "edgeType": "Edge",
          "source": "4be70992490948eb93031b0792af7f28",
          "target": "afb85ba3a0524fd090fa828ef6ae601a",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "5f36fa4989624cd6b6f86d29ecbad5d1",
          "edgeType": "Edge",
          "source": "afb85ba3a0524fd090fa828ef6ae601a",
          "target": "11dd8833309b4724847f5eb9ece28b24",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "b96c630f7e0244dda8daa102bce86891",
          "edgeType": "Edge",
          "source": "11dd8833309b4724847f5eb9ece28b24",
          "target": "8f28d10169b042aeb3fc111f68227f43",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "b9354d3f3cf14c448c5e405b73994fac",
          "edgeType": "Edge",
          "source": "b6350fedfd6c4752954ad3c2eda1d665",
          "target": "e6b8f5474e224e8b87c92c7c06ee457b",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "062b1e01e88b4084b43c267e74a614c8",
          "edgeType": "Branch",
          "source": "e6b8f5474e224e8b87c92c7c06ee457b",
          "target": "04813aaf95dc49f29993fbb8b80002db",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "value": "vaInputs.search_again=",
            "mode": "query"
          },
          "label": "No"
        },
        {
          "id": "fa2db4ce7f194b9abbb91d3c518ff8b2",
          "edgeType": "Edge",
          "source": "8f28d10169b042aeb3fc111f68227f43",
          "target": "6063d490a37745cc865bed11af09d379",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "0491546e47194d8fb0bfd32e6d64662e",
          "edgeType": "Edge",
          "source": "6063d490a37745cc865bed11af09d379",
          "target": "6af39a05a94a435fbb313bf8ec6f619a",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "6f9a0e8d9bfe45449904eb1366ef372b",
          "edgeType": "Edge",
          "source": "6af39a05a94a435fbb313bf8ec6f619a",
          "target": "02ca13429f7f48f9af956e421e6a6139",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "ea345a14f4df4032927fc7a42a5cc248",
          "edgeType": "Edge",
          "source": "02ca13429f7f48f9af956e421e6a6139",
          "target": "b6350fedfd6c4752954ad3c2eda1d665",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "6ca69044203a4ba688bfacb791a029b7",
          "edgeType": "Branch",
          "source": "e6b8f5474e224e8b87c92c7c06ee457b",
          "target": "86e177e7f8f34da1a0cd2cf727dc9163",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "value": "vaInputs.search_again=true",
            "mode": "query"
          },
          "label": "Yes"
        },
        {
          "id": "36ec0b340bc9496c899f2dee5331177e",
          "edgeType": "Edge",
          "source": "86e177e7f8f34da1a0cd2cf727dc9163",
          "target": "49bd7025f7234edc984d5536e65aed8a",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "3aee9313071d4871a05ab34a1d55b339",
          "edgeType": "Branch",
          "source": "49bd7025f7234edc984d5536e65aed8a",
          "target": "4be70992490948eb93031b0792af7f28",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    /* Return true or false to indicate the branch condition's applicability.\n       For example:\n\n       var applies = vaInputs.first_name == 'Bill' ? true : false;\n       return applies;\n    */\n    return vaVars.search_count &lt; vaVars.max_search;\n})()\n"
          },
          "label": "Less than 3"
        },
        {
          "id": "227b19339c1d4ed99b6294979f7601fe",
          "edgeType": "Branch",
          "source": "49bd7025f7234edc984d5536e65aed8a",
          "target": "ec808233c73d495db95fe9f5303c9058",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    /* Return true or false to indicate the branch condition's applicability.\n       For example:\n\n       var applies = vaInputs.first_name == 'Bill' ? true : false;\n       return applies;\n    */\n    return (vaVars.search_count &gt;= vaVars.max_search) ? true : false;\n})()\n"
          },
          "label": "3 or More"
        },
        {
          "id": "365d9af8ae2841e088efbd088acd0a0b",
          "edgeType": "Edge",
          "source": "ec808233c73d495db95fe9f5303c9058",
          "target": "3080f16ee0db4a7f8be0bb005b169972",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "d200cfcf9f1e46bebe410c0414b00560",
          "edgeType": "Edge",
          "source": "3080f16ee0db4a7f8be0bb005b169972",
          "target": "04813aaf95dc49f29993fbb8b80002db",
          "sourcePort": "",
          "targetPort": ""
        }
      ]
    }
  },
  "variables": {
    "e451dc8e4fe24fffb63776607af9a3b1": {
      "id": "e451dc8e4fe24fffb63776607af9a3b1",
      "name": "LiveAgent_application",
      "value": {
        "mode": "simple",
        "value": ""
      },
      "varType": "script",
      "category": "vaVars"
    },
    "current-user": {
      "category": "vaInputs",
      "id": "current-user",
      "label": "User",
      "name": "user",
      "table": "sys_user",
      "varType": "reference"
    },
    "a793eef3c15b4cf5920016921ba8c345": {
      "id": "a793eef3c15b4cf5920016921ba8c345",
      "name": "needit_type",
      "label": "NeedIt Type",
      "varType": "choice",
      "choices": [
        {
          "label": "Legal",
          "value": "legal"
        },
        {
          "label": "Facilities",
          "value": "facilities",
          "checked": true
        },
        {
          "label": "Human Resources",
          "value": "human resources",
          "checked": true
        }
      ],
      "category": "vaInputs"
    },
    "2e6d5cee6b9e40378cc03ec2ffa4607c": {
      "id": "2e6d5cee6b9e40378cc03ec2ffa4607c",
      "name": "needit_list",
      "label": "NeedIt List",
      "varType": "reference",
      "table": "x_58872_needit_needit",
      "category": "vaInputs"
    },
    "c3b2a9b0591d40bd863bf13e03ab0574": {
      "id": "c3b2a9b0591d40bd863bf13e03ab0574",
      "name": "search_again",
      "label": "Search Again",
      "varType": "boolean",
      "secure": false,
      "category": "vaInputs"
    },
    "eb252eae8d194d9eaad73cb65419c43a": {
      "id": "eb252eae8d194d9eaad73cb65419c43a",
      "name": "new_when_needed_date",
      "label": "New When Needed Date",
      "varType": "date_time",
      "secure": false,
      "category": "vaInputs",
      "mode": "date"
    },
    "8d9be18359ae49d1a886c1be2fcdf26a": {
      "id": "8d9be18359ae49d1a886c1be2fcdf26a",
      "name": "change_when_needed_date",
      "label": "Change When Needed Date",
      "varType": "reference",
      "table": "",
      "inactive": true,
      "category": "vaInputs"
    },
    "523695cde63540cdb256c6d13d25f518": {
      "id": "523695cde63540cdb256c6d13d25f518",
      "value": {
        "mode": "simple",
        "value": "0"
      },
      "name": "search_count",
      "label": "search_count",
      "varType": "script",
      "category": "vaVars"
    },
    "1edd887ea36e49cb88c77bace3400a19": {
      "id": "1edd887ea36e49cb88c77bace3400a19",
      "value": {
        "mode": "simple",
        "value": "1"
      },
      "name": "max_search",
      "label": "max_search",
      "varType": "script",
      "category": "vaVars"
    },
    "3b708ddf50384a71a33cf5f6854d719f": {
      "id": "3b708ddf50384a71a33cf5f6854d719f",
      "value": {
        "value": "",
        "mode": "simple"
      },
      "name": "test_value",
      "label": "test_value",
      "varType": "script",
      "category": "vaVars"
    }
  }
}</graph>
        <key_phrases>Update NeedIt Records,NeedIt Request</key_phrases>
        <library>false</library>
        <live_agent>false</live_agent>
        <name>Update NeedIt Records</name>
        <nlu_intent/>
        <nlu_intent_label/>
        <nlu_model/>
        <nlu_model_label/>
        <nlu_provider/>
        <roles/>
        <source_topic_id/>
        <sys_class_name>sys_cb_topic</sys_class_name>
        <sys_created_by>lb_mui</sys_created_by>
        <sys_created_on>2021-05-27 07:59:23</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>168df5fadb587010223ec8da0b961989</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Update NeedIt Records</sys_name>
        <sys_package display_value="NeedIt Virtual Agent Conversations" source="x_615308_needit_vi">097b3576db587010223ec8da0b9619c6</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt Virtual Agent Conversations">097b3576db587010223ec8da0b9619c6</sys_scope>
        <sys_update_name>sys_cb_topic_168df5fadb587010223ec8da0b961989</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-05-28 02:32:13</sys_updated_on>
        <triggerable_by_notification>false</triggerable_by_notification>
        <type>STANDARD</type>
        <variables/>
    </sys_cb_topic>
    <sys_variable_value action="delete_multiple" query="document_key=168df5fadb587010223ec8da0b961989"/>
</record_update>
